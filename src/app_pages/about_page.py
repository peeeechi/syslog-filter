# src/app_pages/about_page.py
import streamlit as st

def run():
    st.title("このアプリケーションについて")
    st.write("""
        このSyslog Filterアプリケーションは、様々な形式のSyslogファイルをアップロードし、
        柔軟なフィルタリングや抽出機能を通じてログを効率的に分析することを目的としています。
        """)
    st.write("---")
    st.subheader("アプリケーションの概要")
    st.markdown("""
    本アプリケーションは、以下の原則に基づいて構築されています：
    * **モジュール性と拡張性**: 各機能は独立したページとして管理され、将来的な機能追加やメンテナンスが容易です。
    * **単一コマンド起動**: `streamlit run src/app.py` という一つのコマンドで全ての機能にアクセスできます。
    * **半自動化されたワークフロー**: 「データ読み込み」ページでファイルをアップロードした後、自動的に次の分析ページに移動します。
    * **堅牢なモジュールインポート**: `src/app.py` がプロジェクトルートをPythonパスに自動的に追加するため、モジュールインポートがより安定しています。
    * **元の `app.py` からの移行**: オリジナルの `app.py` の機能は、新しいモジュール化された構造に完全に移行されており、この実行環境には含まれていません。
    """)
    st.write("---")
    st.subheader("提供機能一覧")
    st.markdown("""
    #### データ読み込みページ
    * **多形式ファイルアップロードの集中管理**: `.log` および `.txt` ファイルに加え、**`.zip` 形式の圧縮ファイルをサポート**します。全てのログデータは、この「データ読み込み」ページで一度だけアップロード・処理されます。
    * **自動ファイル展開**:
        * アップロードされた `.zip` ファイルを自動的に展開します。
        * 展開されたディレクトリ内に含まれる **`.zst` 圧縮ファイルも自動的に展開**します。
    * **ログファイル選択の自動化/手動化**:
        * 展開されたログファイルが1つのみの場合、自動的にそのファイルを読み込みます。
        * 複数の `.log` ファイルが見つかった場合は、ドロップダウンリストから分析対象のファイルを**手動で選択**できます。
    * **効率的なログパース**: `YYYY-MM-DDTHH:MM:SS.ffffff+HH:MM hostname app_name[PID]: message` 形式のSyslogを解析し、ANSIエスケープシーケンスを自動除去します。

    #### 共通機能
    * **一時ファイルのクリーンアップ**: アップロードおよび展開された一時ファイルを、サイドバーのボタンから手動で完全に削除できます（`temp_syslog_upload` ディレクトリごと）。
    * **読み込みデータ共有**: 一度「データ読み込み」ページで読み込んだログデータは、他の全ての分析ページで共通して利用されます。これにより、**ファイルを複数回アップロードする手間が省けます。**
    * **グローバルUI要素**:
        * 画面右上に、常に表示される「日時指定ページへ」ボタン（日時指定ページとデータ読み込みページ以外で表示）と「トップページへ戻る」ボタンを配置し、どこからでも主要なページへアクセス可能にしました。
        * サイドバーの「このアプリケーションについて」ボタンで、いつでも情報ページにアクセスできます。

    #### 「日時指定・抽出」ページ
    * **日付範囲の指定**: ログデータ内に存在する日付の範囲内で、**開始日と終了日をそれぞれ指定**し、日付範囲でログを抽出できます。
    * **時刻範囲のより詳細な指定**: **「時」と「分」を個別に設定**でき、**分は1分単位**で指定可能です。
    * **設定の保持**: 一度指定した日時設定は、ページ移動後も自動的に保持・復元され、再設定の手間が省けます。
    * **絞り込み結果の視覚的な確認**: 絞り込み後のログが多数ある場合、最初と最後の3行ずつを表示し、中略があることを明示します。
    * **抽出結果のダウンロード形式選択**: 抽出されたログデータを、**CSV形式**または**元のSyslog形式に近いLOG形式**のいずれかでダウンロードできます。

    #### 「キーワードフィルタリング」ページ
    * **キーワード検索の対象拡張**: ログメッセージだけでなく、**タイムスタンプ (Timestamp)**、Hostname、AppName、PID も検索キーワードの対象となります。
    * **表示・出力列のカスタマイズ**: 結果テーブルに表示する列や、ダウンロードするCSV/LOGファイルに含める列を、**チェックボックスで個別にON/OFF選択**できます。
    * **日時絞り込みとの連携**: このページは「日時指定・抽出」ページで絞り込まれたデータを対象とします。設定された日時範囲がページ上で表示されます。
    * **表示行数のカスタマイズ**: 結果表示の最大行数をスライダーで調整できます。
    * **結果のダウンロードの堅牢性**: CSVダウンロード時のエスケープエラーを修正し、より確実にダウンロードできるようになりました。LOG形式のダウンロードも選択された列を反映します。

    """)
    st.write("---")
    st.info("このアプリケーションは、[peeeechi/syslog-filter](https://github.com/peeeechi/syslog-filter) をベースに開発されています。")